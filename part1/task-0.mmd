# High-Level Architecture Diagram

Overview

This document describes the high-level architecture of a software system, focusing on the separation of concerns across different layers.

## Architecture Layers

'''mermaid
classDiagram
    %% Présentation
    class PresentationLayer["Presentation Layer"] {
        <<Package>>
        Web Services
        API Endpoints
    }

    %% Logique métier
    class BusinessLogicLayer["Business Logic Layer"] {
        <<Package>>
        Domain Models
        Business Rules
    }

    %% Persistance
    class PersistenceLayer["Persistence Layer"] {
        <<Package>>
        Data Storage
        Data Access
    }

    %% Façade
    class BusinessFacade {
        <<Interface>>
        CRUD Operations
        Business Operations
    }

    %% Relations
    PresentationLayer --> BusinessFacade : uses
    BusinessFacade --> BusinessLogicLayer : manages
    BusinessLogicLayer --> PersistenceLayer : accesses
'''

## Layer Descriptions

1. **Presentation Layer**
    - Handles user interactions and API endpoints
    - Manages request/response formatting

2. **Business Logic Layer**
   - Contains core business logic and models
   - Implements business rules and validations

3. **Persistence Layer**
    - Manages data storage and retrieval
    - Provides data access methods

## Communication Flow

The BusinessFacade pattern simplifies the interaction between layers by providing a unified interface for the presentation layer to access business operations.
